AWSTemplateFormatVersion: '2010-09-09'
Description: Private subnets
Parameters:
  VPCName:
    Description: VPC Name
    Type: String

  PrivateSubnet1:
    Description: The CIDR for the private subnet in availability zone 1
    Type: String
    MinLength: '9'
    MaxLength: '19'
    AllowedPattern: >-
      ^([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5])).([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5])).([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5])).([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5]))/([0-9]|[12][0-9]|3[0-2])
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x

  PrivateSubnet2:
    Description: The CIDR for the private subnet in availability zone 2
    Type: String
    MinLength: '9'
    MaxLength: '19'
    AllowedPattern: >-
      ^([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5])).([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5])).([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5])).([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5]))/([0-9]|[12][0-9]|3[0-2])
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x

  PrivateSubnet3:
    Description: The CIDR for the private subnet in availability zone 3
    Type: String
    MinLength: '9'
    MaxLength: '19'
    AllowedPattern: >-
      ^([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5])).([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5])).([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5])).([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5]))/([0-9]|[12][0-9]|3[0-2])
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x
    Default: '0.0.0.0/32'

  PrivateSubnet4:
    Description: The CIDR for the private subnet in availability zone 4
    Type: String
    MinLength: '9'
    MaxLength: '19'
    AllowedPattern: >-
      ^([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5])).([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5])).([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5])).([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5]))/([0-9]|[12][0-9]|3[0-2])
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x
    Default: '0.0.0.0/32'

  VpcId:
    Description: The VPC ID to create subnets in
    Type: AWS::EC2::VPC::Id

Conditions:
  PrivateSubnet3_IsSet: !Not
    - !Equals
      - !Ref 'PrivateSubnet3'
      - '0.0.0.0/32'

  PrivateSubnet4_IsSet: !Not
    - !Equals
      - !Ref 'PrivateSubnet4'
      - '0.0.0.0/32'

Resources:
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'VpcId'
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'VPCName'
              - private-1
        - Key: availability_zone
          Value: !Select
            - '0'
            - !GetAZs
              Ref: AWS::Region

  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'VpcId'
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'VPCName'
              - private-2
        - Key: availability_zone
          Value: !Select
            - '1'
            - !GetAZs
              Ref: AWS::Region

  PrivateRouteTable3:
    Type: AWS::EC2::RouteTable
    Condition: PrivateSubnet3_IsSet
    Properties:
      VpcId: !Ref 'VpcId'
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'VPCName'
              - private-3
        - Key: availability_zone
          Value: !Select
            - '2'
            - !GetAZs
              Ref: AWS::Region

  PrivateRouteTable4:
    Type: AWS::EC2::RouteTable
    Condition: PrivateSubnet4_IsSet
    Properties:
      VpcId: !Ref 'VpcId'
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'VPCName'
              - private-4
        - Key: availability_zone
          Value: !Select
            - '3'
            - !GetAZs
              Ref: AWS::Region

  PrivateSubnet1Stack:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'VpcId'
      AvailabilityZone: !Select
        - '0'
        - !GetAZs
          Ref: AWS::Region
      CidrBlock: !Ref 'PrivateSubnet1'
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'VPCName'
              - private-1

  PrivateSubnet2Stack:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'VpcId'
      AvailabilityZone: !Select
        - '1'
        - !GetAZs
          Ref: AWS::Region
      CidrBlock: !Ref 'PrivateSubnet2'
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'VPCName'
              - private-2

  PrivateSubnet3Stack:
    Type: AWS::EC2::Subnet
    Condition: PrivateSubnet3_IsSet
    Properties:
      VpcId: !Ref 'VpcId'
      AvailabilityZone: !Select
        - '2'
        - !GetAZs
          Ref: AWS::Region
      CidrBlock: !Ref 'PrivateSubnet3'
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'VPCName'
              - private-3

  PrivateSubnet4Stack:
    Type: AWS::EC2::Subnet
    Condition: PrivateSubnet4_IsSet
    Properties:
      VpcId: !Ref 'VpcId'
      AvailabilityZone: !Select
        - '3'
        - !GetAZs
          Ref: AWS::Region
      CidrBlock: !Ref 'PrivateSubnet4'
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'VPCName'
              - private-4

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'PrivateSubnet1Stack'
      RouteTableId: !Ref 'PrivateRouteTable1'

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'PrivateSubnet2Stack'
      RouteTableId: !Ref 'PrivateRouteTable2'

  PrivateSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: PrivateSubnet3_IsSet
    Properties:
      SubnetId: !Ref 'PrivateSubnet3Stack'
      RouteTableId: !Ref 'PrivateRouteTable3'

  PrivateSubnet4RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: PrivateSubnet4_IsSet
    Properties:
      SubnetId: !Ref 'PrivateSubnet4Stack'
      RouteTableId: !Ref 'PrivateRouteTable4'

Outputs:
  PrivateRouteTable1:
    Value: !Ref 'PrivateRouteTable1'

  PrivateRouteTable2:
    Value: !Ref 'PrivateRouteTable2'

  PrivateRouteTable3:
    Condition: PrivateSubnet3_IsSet
    Value: !Ref 'PrivateRouteTable3'

  PrivateRouteTable4:
    Condition: PrivateSubnet4_IsSet
    Value: !Ref 'PrivateRouteTable4'

  PrivateSubnet1Cidr:
    Value: !Ref 'PrivateSubnet1'

  PrivateSubnet1Id:
    Value: !Ref 'PrivateSubnet1Stack'

  PrivateSubnet1AZ:
    Value: !GetAtt 'PrivateSubnet1Stack.AvailabilityZone'

  PrivateSubnet2Cidr:
    Value: !Ref 'PrivateSubnet2'

  PrivateSubnet2Id:
    Value: !Ref 'PrivateSubnet2Stack'

  PrivateSubnet2AZ:
    Value: !GetAtt 'PrivateSubnet2Stack.AvailabilityZone'

  PrivateSubnet3Cidr:
    Condition: PrivateSubnet3_IsSet
    Value: !Ref 'PrivateSubnet3'

  PrivateSubnet3Id:
    Condition: PrivateSubnet3_IsSet
    Value: !Ref 'PrivateSubnet3Stack'

  PrivateSubnet3AZ:
    Condition: PrivateSubnet3_IsSet
    Value: !GetAtt 'PrivateSubnet3Stack.AvailabilityZone'

  PrivateSubnet4Cidr:
    Condition: PrivateSubnet4_IsSet
    Value: !Ref 'PrivateSubnet4'

  PrivateSubnet4Id:
    Condition: PrivateSubnet4_IsSet
    Value: !Ref 'PrivateSubnet4Stack'

  PrivateSubnet4AZ:
    Condition: PrivateSubnet4_IsSet
    Value: !GetAtt 'PrivateSubnet4Stack.AvailabilityZone'
